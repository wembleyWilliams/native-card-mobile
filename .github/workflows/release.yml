name: Deployment Release with Semantic Versioning

on:
  push:
    branches:
      - dev
      - master
      - staging

jobs:
  # Development job with semantic-release and Docker deployment
  development:
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    environment: development
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.8.1'

      - name: Install dependencies
        run: npm install

      - name: Run semantic-release
        id: semantic_release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npm run semantic-release

      - name: Get version from package.json
        id: get_version
        run: echo "RELEASE_VERSION=$(jq -r .version < package.json)" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: |
          VERSION=$(cat version.txt)
          docker build -t wembleywilliams/card:${{RELEASE_VERSION}} .

      - name: Push Docker image to Docker Hub
        run: |
          VERSION=$(cat version.txt)
          docker push wembleywilliams/card:${{RELEASE_VERSION}}

      - name: SSH into DigitalOcean Droplet and deploy docker
        run: |
          ssh -o StrictHostKeyChecking=no -o ConnectTimeout=500 -o ServerAliveInterval=60 -o ServerAliveCountMax=120 kratos@${{ secrets.DROPLET_IP }} << 'EOF'
            cd ~/native-card-mobile
            docker compose down
            docker pull wembleywilliams/card:${{RELEASE_VERSION}}
            docker compose up --build -d
          EOF

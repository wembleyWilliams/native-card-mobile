{"version":3,"sources":["components/sections/profile-section/ProfileSection.tsx","constants/theme.tsx","components/common/Card.tsx","components/sections/description-section/DescriptionSection.tsx","common/icon-loader/index.ts","components/sections/social-section/SocialBar.tsx","components/sections/social-section/SocialSection.tsx","pages/404NotFound/index.tsx","services/index.ts","utils/saveContact.ts","components/common/SaveContactModal.tsx","components/business-card/BusinessCard.tsx","redux/actions/index.ts","redux/reducers/applicationReducer.ts","redux/reducers/index.ts","redux/store.ts","App.tsx","assets/placeholders/avatar.png","assets/icons/Twitter.png","assets/icons/Instagram.png","assets/icons/Facebook.png","assets/placeholders/cards.png"],"names":["styles","StyleSheet","create","container","maxHeight","maxWidth","alignItems","justifyContent","borderRadius","borderWidth","ProfileSection","props","View","style","image","Image","size","source","uri","mime","data","require","COLORS","MARGINS","SIZES","PADDING","BaseCard","marginHorizontal","minWidth","height","backgroundColor","color","borderColor","margin","padding","_jsx","Card","children","title","fontSize","textAlign","description","paddingTop","alignContent","DescriptionSection","Text","iconLoader","url","search","wrapper","flexDirection","handle","linkButtonText","fontWeight","linkButton","paddingHorizontal","paddingVertical","SocialBar","_Fragment","_jsxs","IconButton","icon","profileURL","iconColor","containerColor","disabled","profileName","TouchableOpacity","onPress","WebBrowser","overflow","SocialSection","width","FlatGrid","maxItemsPerRow","socialMedia","renderItem","_ref","item","titlebody","titlefourofour","textBody","flex","PageNotFoundView","services","getBusiness","axios","get","then","res","catch","err","console","log","saveContact","contactToSave","Contacts","status","contact","FirstName","firstname","LastName","lastname","Company","company","ContactType","contactType","PhoneNumbers","countryCode","digits","label","number","Addresses","city","country","isoCountryCode","postalCode","region","street","Emails","email","contactId","windowHeight","Dimensions","formControl","formButton","headerCloseIcon","marginVertical","header","textInput","paddingBottom","body","modalText","centeredView","marginTop","SaveContactModal","useState","setFirstname","setLastname","emails","setEmail","setCompany","addresses","setAddress","phoneNumbers","setPhoneNumbers","setContactType","useEffect","Modal","visible","open","animationType","transparent","onRequestClose","handleClose","TextInput","placeholder","value","onChangeText","map","phoneNumber","index","address","Button","r","finally","BusinessCard","_useState","_useState2","_slicedToArray","loadingComplete","setLoadingComplete","_useState3","_useState4","errorPage","setErrorPage","_useState5","_useState6","isOpenSaveContactModal","setIsOpenSaveContactModal","dispatch","useDispatch","windowWidth","useSelector","state","_state$application$ap","application","BusinessData","logo","_state$application$ap2","socialMediaArray","_state$application$ap3","_state$application$ap4","lottie","loadingText","position","type","payload","Description","ErrorPage","initialState","UserData","_id","businessId","password","profilePicture","name","pointOfContact","applicationReducer","action","business","user","rootReducer","combineReducers","composeWithReduxDevtools","composeWithDevTools","applyMiddleware","thunk","store","createStore","App","module","exports"],"mappings":"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","file":"static/js/app.f0da63e5.chunk.js","sourcesContent":["import React, {useState} from \"react\"\nimport {View, Text, StyleSheet, TouchableOpacity, Image} from \"react-native\";\nimport { Avatar } from 'react-native-paper';\nimport AvatarPlaceholder  from '../../common/index';\nimport create = StyleSheet.create;\n\ninterface Props {\n    image?: {\n        data: string | undefined,\n        mime: string | undefined\n    }\n}\n\nconst ProfileSection = (props: Props)  => {\n\n    return (\n      <View style={styles.container}>\n          {\n              props.image?\n                  <Avatar.Image size={200} source={{uri: `data:${props.image?.mime};base64,${props.image?.data}`}}/>\n              :\n                  <Avatar.Image size={200} source={require('../../../assets/placeholders/avatar.png')} />\n          }\n      </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        maxHeight: 200,\n        maxWidth:200,\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 180,\n        borderWidth: 1\n    },\n});\n\nexport default ProfileSection;\n","export const COLORS = {\n    primary: \"#D14545\",\n    secondary: \"#4D626C\",\n\n    white: \"#FFF\",\n    gray: \"#74858C\",\n};\n\nexport const CARD_HEIGHT = 200\n\nexport const MARGINS = {\n    text: 25,\n}\n\nexport const SIZES = {\n    base: 8,\n    small: 12,\n    font: 14,\n    medium: 24,\n    large: 48,\n    extraLarge: 32,\n};\n\nexport const PADDING = {\n    button: 20\n}\n\nexport const FONTS = {\n    bold: \"InterBold\",\n    semiBold: \"InterSemiBold\",\n    medium: \"InterMedium\",\n    regular: \"InterRegular\",\n    light: \"InterLight\",\n};\n\nexport const SHADOWS = {\n    light: {\n        shadowColor: COLORS.gray,\n        shadowOffset: {\n            width: 0,\n            height: 1,\n        },\n        shadowOpacity: 0.22,\n        shadowRadius: 2.22,\n\n        elevation: 3,\n    },\n    medium: {\n        shadowColor: COLORS.gray,\n        shadowOffset: {\n            width: 0,\n            height: 3,\n        },\n        shadowOpacity: 0.29,\n        shadowRadius: 4.65,\n\n        elevation: 7,\n    },\n    dark: {\n        shadowColor: COLORS.gray,\n        shadowOffset: {\n            width: 0,\n            height: 7,\n        },\n        shadowOpacity: 0.41,\n        shadowRadius: 9.11,\n\n        elevation: 14,\n    },\n};\n","import React from 'react';\nimport {View, Text, StyleSheet} from \"react-native\";\nimport create = StyleSheet.create;\nimport {CARD_HEIGHT, COLORS, MARGINS} from \"../../constants/theme\";\nimport {Card} from \"react-native-paper\";\n\ninterface CardProps {\n    height?: number,\n    width?: number,\n    color?: any,\n    padding?: number,\n    minWidth?: string,\n    margin?: string,\n    children?: any;\n}\n\n\nconst BaseCard = (props: CardProps) => {\n    const styles = StyleSheet.create({\n        container: {\n            marginHorizontal: 'auto',\n            minWidth: props.minWidth?props.minWidth:'100%',\n            height: props.height?props.height: CARD_HEIGHT,\n            backgroundColor: props.color? props.color :COLORS.primary ,\n            alignItems: 'center',\n            justifyContent: 'center',\n            borderRadius: 30,\n            borderColor: 'red',\n            margin: props.margin?props.margin:MARGINS.text,\n            padding: props.padding?props.padding : 20\n        },\n    });\n\n    return (\n        <Card style={styles.container}>\n            {props.children}\n        </Card>\n    );\n};\n\n\n\nexport default BaseCard;","import React from \"react\"\nimport {View, Text, StyleSheet, TouchableOpacity} from \"react-native\";\nimport {FONTS, SIZES, COLORS, SHADOWS, MARGINS, CARD_HEIGHT} from \"../../../constants/theme\";\nimport create = StyleSheet.create;\nimport Card from \"../../common/Card\";\n\ninterface Props {\n    description?: string\n}\n\nconst DescriptionSection = (props: Props) => {\n\n\n    return (\n        <Card color={COLORS.secondary}>\n            <Text style={styles.title}>Description</Text>\n            <Text style={styles.description}>\n                {props.description}\n                </Text>\n        </Card>\n    )\n}\n\nconst styles = StyleSheet.create({\n\n    title: {\n        color: '#FFF',\n        fontSize: SIZES.extraLarge,\n        textAlign: 'center'\n    },\n    description: {\n        paddingTop: 20,\n        color: '#FFF',\n        fontSize: SIZES.font,\n        alignItems:'center',\n        alignContent:'flex-start',\n        textAlign: 'left'\n    }\n});\n\nexport default DescriptionSection","import {useSelector} from \"react-redux\";\nimport {State} from \"../../redux/reducers\";\nimport {Icon} from \"react-native-paper/lib/typescript/components/Avatar/Avatar\";\nimport {Avatar} from \"react-native-paper\";\nimport {View} from \"react-native\";\n\n\nconst iconLoader = (url: string) => {\n    if (url.search('twitter') > -1) {\n        return require('../../assets/icons/Twitter.png')\n    }\n     else if (url.search('instagram') > -1) {\n        return require('../../assets/icons/Instagram.png')\n    }\n     else if (url.search('facebook') > -1) {\n         return require('../../assets/icons/Facebook.png')\n    }\n    return null\n}\n\nexport default iconLoader","import React from \"react\"\nimport {View, StyleSheet, Text, Alert, Button, TouchableOpacity} from \"react-native\";\nimport {FONTS, SIZES, COLORS, SHADOWS, MARGINS, CARD_HEIGHT, PADDING} from \"../../../constants/theme\";\nimport create = StyleSheet.create;\nimport Card from \"../../common/Card\";\nimport {IconButton, } from \"react-native-paper\";\nimport * as WebBrowser from 'expo-web-browser';\nimport iconLoader from \"../../../common/icon-loader\";\n\n\ninterface Props {\n    profileURL?: string,\n    profileName?: string\n}\n\nconst SocialBar = (props: Props) => {\n    return (\n        <>\n            <View style={styles.wrapper}>\n                <View style={styles.container}>\n                    <IconButton\n                        icon={iconLoader(props.profileURL as string)}\n                        size={25}\n                        iconColor={\"#FFF\"}\n                        containerColor={\"#FFF\"}\n                        disabled={true}\n                    />\n\n                    <Text style={styles.handle}>{props.profileName}</Text>\n                    <TouchableOpacity\n                        style={styles.linkButton}\n                        onPress={()=> WebBrowser.openBrowserAsync(props.profileURL as string)}\n                    >\n                        <Text style={styles.linkButtonText}>Visit</Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n        </>\n    )\n}\n\nconst styles = StyleSheet.create({\n    wrapper: {\n        backgroundColor: '#2c2c2c',\n        borderRadius: 60,\n        // padding: 2,\n        // width: '100%'\n    },\n\n    container: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-around',\n        // width: '90%'\n    },\n    handle: {\n        color: '#FFF'\n    },\n    linkButtonText: {\n        color: '#FFF',\n        fontWeight:'bold',\n    },\n    linkButton : {\n        // height: '60%',\n        backgroundColor: COLORS.primary,\n        borderRadius: 10,\n        alignContent: \"center\",\n        paddingHorizontal: PADDING.button,\n        paddingVertical: PADDING.button\n    }\n})\n\nexport default SocialBar","import React from \"react\"\nimport {View, Text, StyleSheet, TouchableOpacity, ListView} from \"react-native\";\nimport {FONTS, SIZES, COLORS, SHADOWS, MARGINS, CARD_HEIGHT} from \"../../../constants/theme\";\nimport create = StyleSheet.create;\nimport Card from \"../../common/Card\";\nimport SocialBar from \"./SocialBar\";\nimport {List} from \"react-native-paper\";\nimport {FlatGrid} from \"react-native-super-grid\";\nimport socialBar from \"./SocialBar\";\n\ninterface Props {\n    socialMedia: [{\n        profileName?: string,\n        profileURL?: string\n    }]\n}\n\nconst SocialSection = (props: Props) => {\n    return (\n        <Card\n            width={100}\n            minWidth={'312px'}\n            color={'white'}\n            padding={-1}\n        >\n            <View style={styles.container}>\n                <FlatGrid\n                    maxItemsPerRow={1}\n                    data={props.socialMedia}\n                    renderItem={({ item })=> {\n                            return <SocialBar\n                                profileName={item.profileName}\n                                profileURL={item.profileURL}\n                            />\n                    } } />\n            </View>\n        </Card>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        overflow: \"scroll\",\n        // width: '80%',\n    },\n});\n\nexport default SocialSection","import React from 'react';\nimport {Image, StyleSheet, Text, View} from 'react-native';\nimport {COLORS, PADDING} from \"../../constants/theme\";\n\nconst PageNotFoundView = () => {\n\n    return (\n        <View style={styles.wrapper}>\n            <View style={styles.container}>\n                <View>\n                    <Text style={styles.titlefourofour}>\n                        404\n                    </Text>\n                    <Text style={styles.titlebody}>\n                        Card Not Found\n                    </Text>\n                </View>\n\n                <Image\n                    style={styles.image}\n                    source={require('../../assets/placeholders/cards.png')}/>\n                <Text style={styles.textBody}>\n                    An error has occurred and the business card cannot be loaded\n                    at this time, sorry for the inconvenience\n                </Text>\n            </View>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    image:{\n        width: 200,\n        height: 200\n    },\n    titlebody: {\n        fontSize:40,\n        fontWeight: \"bold\",\n        color: '#fff',\n        textAlign: 'center'\n    },\n    titlefourofour: {\n        fontSize:120,\n        fontWeight: \"bold\",\n        color: '#fff',\n        textAlign: 'center'\n    },\n    textBody: {\n        fontSize:20,\n        fontWeight: \"bold\",\n        color: '#fff',\n        textAlign: 'center'\n    },\n    wrapper: {\n        width: '100%',\n        flex: 1,\n        backgroundColor: '#2c2c2c',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    container: {\n        flexDirection:\"column\",\n        width: '90%',\n        height: '88%',\n        alignItems: 'center',\n        justifyContent: 'space-around'\n    },\n    handle: {\n        color: '#FFF'\n    },\n    linkButtonText: {\n        color: '#FFF',\n        fontWeight:'bold',\n        margin:\"auto\"\n    },\n    linkButton : {\n        height: '60%',\n        backgroundColor: COLORS.primary,\n        borderRadius: 50,\n        alignContent: \"center\",\n        paddingHorizontal: PADDING.button\n    }\n})\n\n\n\n\nexport default PageNotFoundView","import axios from 'axios';\n\nconst url = \"http://164.90.225.233:7020\"\n// const url = \"http://localhost:7020\"\nconst services = {\n    // getUser: async () => {\n    //   //local\n    //   return axios.get(`${url}/user/63d1f602022d42b7cc4aa558`)\n    //       .then((res)=>{\n    //           return res.data\n    //       })\n    //       .catch((err) => {\n    //           console.log(err)\n    //           return null\n    //       })\n    // },\n    getBusiness: async () => {\n\n        //Local - For Testing only\n        return axios.get(`${url}/business/63d1f602022d42b7cc4aa558`)\n            .then((res) => {\n                return res.data;\n            })\n            .catch((err) => {\n                console.log(err)\n                return null\n            })\n\n        //Hosted\n        // let params = new URLSearchParams(document.location.search.substring(1));\n        // let businessId = params.get(\"businessId\");\n\n        // return axios.get(`${url}/business/${businessId}`)\n        //         .then((res) => {\n        //             return res.data;\n        //         })\n        //         .catch((err) => {\n        //             // log.error(err)\n        //             console.log(err)\n        //         })\n    }\n}\n\nexport default services;","import * as Contacts from 'expo-contacts';\nimport {Contact} from '../common/types'\n\nconst saveContact = async (contactToSave?: { emails: {}[]; addresses: {}[]; firstname: string; company: string; contactType: string; phoneNumbers: {}[]; lastname: string }) => {\n\n    //Works with IOS\n    const {status} = await Contacts.requestPermissionsAsync();\n    if (status === 'granted') {\n\n        const contact = {\n            [Contacts.Fields.FirstName]: contactToSave?.firstname,\n            [Contacts.Fields.LastName]: contactToSave?.lastname,\n            [Contacts.Fields.Company]: contactToSave?.company,\n            [Contacts.Fields.ContactType]: contactToSave?.contactType,\n            [Contacts.Fields.PhoneNumbers]: [{\n                countryCode: \"us\",\n                digits: \"5555648583\",\n                label: \"mobile\",\n                number: \"(555) 564-8583\"\n            }, {\n                countryCode: \"us\",\n                digits: \"4155553695\",\n                label: \"main\",\n                number: \"(415) 555-3695\"\n            }],\n            [Contacts.Fields.Addresses]:\n                [{\n                    city: \"Hillsborough\",\n                    country: \"USA\",\n                    isoCountryCode: \"us\",\n                    label: \"work\",\n                    postalCode: \"94010\",\n                    region: \"CA\",\n                    street: \"165 Davis Street\"\n                }],\n            [Contacts.Fields.Emails]: [{\n                email: \"kate-bell@mac.com\",\n                label: \"work\"\n            }]\n        };\n\n        //@ts-ignore\n        const contactId = await Contacts.addContactAsync(contact);\n        console.log(contactId)\n        // const { data } = await Contacts.getContactsAsync({\n        //     fields: [Contacts.Fields.Emails],\n        // });\n        //\n        // if (data.length > 0) {\n        //     const contact = data[0];\n        //     console.log(contact)\n        // }\n        return contactId;\n    }\n}\n\nexport default saveContact","import * as React from \"react\"\nimport {useEffect, useState} from \"react\"\nimport {View, StyleSheet, Modal, Dimensions, Text, TouchableOpacity} from \"react-native\"\nimport {Contact} from \"../../common/types\";\nimport {Button, IconButton, MD2Colors, TextInput} from 'react-native-paper';\nimport {COLORS} from \"../../constants/theme\";\nimport saveContact from \"../../utils/saveContact\";\nimport {all} from \"axios\";\n\ninterface Props {\n    open: any;\n    handleClose: any;\n    contact: Contact,\n}\n\nconst windowHeight = Dimensions.get('window').height;\nconst windowWidth = Dimensions.get('window').width;\n\nconst SaveContactModal = (props: Props) => {\n    const [firstname, setFirstname] = useState('')\n    const [lastname, setLastname] = useState('')\n    const [emails, setEmail] = useState([{}])\n    const [company, setCompany] = useState('')\n    const [addresses, setAddress] = useState([{}])\n    const [phoneNumbers, setPhoneNumbers] = useState([{}])\n    const [contactType, setContactType] = useState('')\n\nuseEffect(()=>{\n    setFirstname(props.contact.firstname)\n    setLastname(props.contact.lastname)\n    setCompany(props.contact?.company as string)\n    setEmail(props.contact?.emails as any)\n    setAddress(props.contact?.addresses as any)\n    // console.log(props.contact?.addresses as any)\n    setPhoneNumbers(props.contact?.phoneNumbers as any)\n    setContactType(props.contact?.contactType as string)\n},[])\n    return (\n        <View style={styles.centeredView}>\n            <Modal\n                visible={props.open}\n                animationType={\"slide\"}\n                transparent={true}\n                onRequestClose={props.handleClose}\n            >\n                <View style={styles.wrapper}>\n                    <View style={styles.container}>\n                        <View style={styles.header}>\n                            <IconButton style={styles.headerCloseIcon}\n                                        icon=\"close\"\n                                        size={24}\n                                        onPress={props.handleClose}\n                                />\n                        </View>\n                        <View style={styles.body}>\n                            <TextInput\n                                style={styles.textInput}\n                                label=\"Firstname\"\n                                placeholder={firstname}\n                                value={firstname}\n                                onChangeText={()=>setFirstname(firstname)}\n                            />\n                            <TextInput\n                                style={styles.textInput}\n                                label=\"Lastname\"\n                                placeholder={lastname}\n                                value={lastname}\n                                onChangeText={()=>setLastname(lastname)}\n                            />\n                            <TextInput\n                                style={styles.textInput}\n                                label=\"Company\"\n                                placeholder={company}\n                                value={company}\n                                onChangeText={()=>setCompany(company)}\n                            />\n                            {\n                                phoneNumbers ?\n                                phoneNumbers.map((phoneNumber,index)=>{\n                                       return (\n                                           <TextInput\n                                               style={styles.textInput}\n                                               label={`Phone Number ${index+1}`}\n                                               placeholder={`${phoneNumber[index]?.number}`}\n                                               value={`${phoneNumber[index]?.number}`}\n                                               onChangeText={()=>setPhoneNumbers(phoneNumber[index]?.number)}\n                                           />\n                                       )\n                                }) : null\n                            }\n                            {\n                                emails ?\n                                emails.map((email, index) => {\n                                    return (\n                                        <TextInput\n                                            style={styles.textInput}\n                                            label={`Email ${index+1}`}\n                                            placeholder={`${email}`}\n                                            value={`${email}`}\n                                            onChangeText={()=>setEmail(email[index])}\n                                            />\n                                    )\n                                }) : null\n                            }\n                            {\n                                addresses ?\n                                addresses.map((address, index) => {\n                                    return (\n                                        <TextInput\n                                            style={styles.textInput}\n                                            label={`Address ${index+1}`}\n                                            placeholder={`${address}`}\n                                            value={`${address}`}\n                                            onChangeText={()=>setAddress(address[index])}\n                                        />\n                                    )\n                                }) : null\n                            }\n                            <View style={styles.formControl}>\n                                <Button\n                                    style={styles.formButton}\n                                    icon={\"close\"}\n                                    onPress={props.handleClose}\n                                >\n                                    Cancel\n                                </Button>\n\n                                <Button\n                                style={styles.formButton}\n                                icon={\"check-bold\"}\n                                onPress={\n                                    ()=>saveContact({\n                                            addresses: addresses,\n                                            company: company,\n                                            contactType: contactType,\n                                            emails: emails,\n                                            lastname: lastname,\n                                            phoneNumbers: phoneNumbers,\n                                            firstname: firstname\n                                        })\n                                        .then(r => console.log(r))\n                                        .finally(props.handleClose)\n                                }\n                                >\n                                    Confirm\n                                </Button>\n\n\n                            </View>\n                        </View>\n\n                    </View>\n                </View>\n            </Modal>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    formControl: {\n        flexDirection: 'row',\n        justifyContent: 'center'\n    },\n    formButton:{\n        paddingTop: 40\n    },\n    headerCloseIcon: {\n        flex: 2,\n        margin: 'auto',\n        marginHorizontal: '85%',\n        marginVertical: 2,\n    },\n    header: {\n        fontSize: 24,\n        height: 40,\n        flexDirection: 'row',\n        justifyContent:'flex-end',\n        alignItems:'flex-end',\n        margin: 'auto',\n    },\n    textInput:{\n        paddingTop: 10,\n        paddingBottom: 10,\n        backgroundColor:'transparent',\n    },\n    body: {\n        paddingTop: 20,\n        margin: 'auto',\n        flexDirection: 'column'\n    },\n    modalText: {\n        color: \"#2c2c2c\",\n    },\n    centeredView: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: 22,\n    },\n    container: {\n        height: windowHeight*0.8,\n        borderRadius: 25,\n        backgroundColor: 'ghostwhite',\n        padding: 35\n    },\n    wrapper: {\n        marginVertical:'50%',\n        padding: 35,\n        backgroundColor: \"transparent\",\n    }\n})\n\nexport default SaveContactModal","import React, {useEffect, useState} from \"react\"\nimport {View, Text, StyleSheet, TouchableOpacity} from \"react-native\";\nimport ProfileSection from \"../sections/profile-section/ProfileSection\";\nimport Description from \"../sections/description-section/DescriptionSection\";\nimport SocialSection from \"../sections/social-section/SocialSection\";\nimport ErrorPage from \"../../pages/404NotFound\";\nimport {State} from \"../../redux/reducers/index\"\nimport services from \"../../services\";\nimport {setBusinessDetails} from \"../../redux/actions\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport AnimatedLoader from \"react-native-animated-loader\";\nimport {COLORS, FONTS, PADDING, SIZES} from \"../../constants/theme\";\nimport saveContact from \"../../utils/saveContact\";\nimport {Dimensions} from 'react-native';\nimport SaveContactModal from \"../common/SaveContactModal\";\n\nconst BusinessCard = ( ) => {\n    const [loadingComplete, setLoadingComplete] = useState(false)\n    const [errorPage, setErrorPage] = useState(false)\n    const [isOpenSaveContactModal, setIsOpenSaveContactModal] = useState(false)\n\n    const dispatch = useDispatch();\n    const windowWidth = Dimensions.get('window').width;\n    const windowHeight = Dimensions.get('window').height;\n\n    const description = useSelector(\n        (state: State) => state.application.application.BusinessData?.description\n    )\n    const logo = useSelector(\n        (state: State) => state.application.application.BusinessData?.logo\n    )\n\n    const socialMediaArray = useSelector(\n        (state: State) => state.application.application.BusinessData?.socialMedia\n    )\n\n    const contact = useSelector(\n        (state: State) => state.application.application.BusinessData?.contact\n    )\n\n    const styles = StyleSheet.create({\n        lottie:{\n            width: 400,\n            height: 400,\n        },\n        loadingText: {\n            width: 300,\n            color: 'white',\n            fontWeight: 'bold',\n            fontSize: SIZES.font,\n            textAlign: \"center\"\n        },\n        wrapper: {\n            width: windowWidth,\n            height: windowHeight,\n            flex: 1,\n            backgroundColor: 'transparent',\n            alignItems: 'center',\n            justifyContent: 'center',\n        },\n        container: {\n            position: \"absolute\",\n            height: windowHeight - (windowHeight*0.2),\n            width: windowWidth - (windowWidth*0.2),\n            alignItems: 'center',\n            justifyContent: 'center',\n        },\n        linkButtonText: {\n            color: '#FFF',\n            fontWeight:'bold',\n            margin:\"auto\"\n        },\n        linkButton : {\n            height: 'auto',\n            backgroundColor: COLORS.primary,\n            borderRadius: 50,\n            alignContent: \"center\",\n            paddingHorizontal: PADDING.button\n        }\n    });\n\n    const openSaveContactModal = () => {\n        setIsOpenSaveContactModal(true)\n    }\n\n    const closeSaveContactModal = () => {\n        setIsOpenSaveContactModal(false)\n    }\n\n    useEffect(()=> {\n        console.log(\"Retrieving business data\")\n            services\n                .getBusiness()\n                .then((res)=>{\n                    if(res){\n                        dispatch(setBusinessDetails(res))\n                        setLoadingComplete(true)\n                        console.log(\"Business Data retrieved successfully\");\n                    }\n                    else if(!res){\n                        setLoadingComplete(false)\n                        setErrorPage(true)\n                        console.log('No network data retrieved')\n                    }\n                })\n                .catch((err)=>{\n                    console.log(err)\n                })\n\n        console.log(\"Retrieving user data\")\n    },[])\n\n    return (\n        <View style={styles.wrapper}>\n        { loadingComplete ? (\n            <>\n                <SaveContactModal\n                    open={isOpenSaveContactModal}\n                    contact={contact}\n                    handleClose={closeSaveContactModal}/>\n\n                <View style={styles.container}>\n                    <ProfileSection image={{data: logo?.data, mime: logo?.mime}}/>\n                    <Description\n                        description={description ? description : 'No Description'}/>\n                    <SocialSection socialMedia={socialMediaArray}/>\n\n                    {/*TODO: replace with actual SAVE CONTACT interface*/}\n                    <TouchableOpacity\n                        style={styles.linkButton}\n                        onPress={() => {\n                            setIsOpenSaveContactModal(true)\n                        }}\n                    >\n                        <Text style={styles.linkButtonText}>SAVE CONTACT</Text>\n                    </TouchableOpacity>\n                </View>\n\n\n            </>\n\n        ) : (\n            !errorPage? (\n                <View style={styles.container}>\n                    {/*TODO: Replace loading screen with react-native-web compatible screen*/}\n                    {/*<AnimatedLoader*/}\n                    {/*    source={require(\"../../common/loader/card-loading-animation.json\")}*/}\n                    {/*    visible={!loadingComplete}*/}\n                    {/*    overlayColor=\"rgba(255,255,255,0)\"*/}\n                    {/*    animationStyle={styles.lottie}*/}\n                    {/*    speed={1.5}*/}\n                    {/*    loop={true}*/}\n                    {/*>*/}\n                    {/*    <Text style={styles.loadingText}>Pulling up your records master</Text>*/}\n                    {/*</AnimatedLoader>*/}\n                </View>\n            ):(\n                <ErrorPage />\n            )\n\n        )}\n        </View>\n    );\n\n}\n\n\n\nexport default BusinessCard;","import {BusinessData, UserData} from \"../../common/types\";\n\nexport const setBusinessDetails = (businessDetails: BusinessData) => ({\n    type: 'SET_BUSINESS_DETAILS',\n    payload: {BusinessData: businessDetails}\n})\n\nexport const setUserDetails = (userDetails: UserData) => ({\n    type: 'SET_USER_DETAILS',\n    payload: {UserData: userDetails}\n})\n\n\n","import {ApplicationState} from \"../../common/types\";\n\nconst initialState: ApplicationState = {\n    application: {\n        UserData: {\n            _id: '',\n            firstname: '',\n            lastname: '',\n            email: '',\n            businessId: [''],\n            password: '',\n            profilePicture: { data: '', mime: '' }\n        },\n        BusinessData: {\n            _id: '',\n            name: '',\n            description: '',\n            contact: '',\n            address: '',\n            pointOfContact: '',\n            email: '',\n            socialMedia: [{\n                profileName: '',\n                profileURL: '',\n            }]\n        }\n    }\n\n}\n\nexport const applicationReducer = (state = initialState, action: any) => {\n    switch (action.type) {\n        case \"SET_BUSINESS_DETAILS\":\n            const business = action.payload\n            return {\n                ...state,\n                application: business\n            };\n        case \"SET_USER_DETAILS\":\n            const user = action.payload\n            return {\n                ...state,\n                application: user\n            };\n\n        default:\n            return state;\n    }\n}\n\nexport default applicationReducer;","import {ApplicationState} from \"../../common/types\";\nimport {combineReducers} from \"redux\";\nimport {applicationReducer} from '../reducers/applicationReducer'\n\n\nexport interface State {\n    application: ApplicationState\n}\n\nexport const rootReducer = combineReducers({\n    application: applicationReducer,\n});\n\n","import {createStore, applyMiddleware} from \"redux\";\nimport {rootReducer} from \"./reducers\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\n\nconst composeWithReduxDevtools = composeWithDevTools(\n    applyMiddleware(thunk)\n);\n\nexport const store = createStore(\n    rootReducer,\n    composeWithReduxDevtools\n);","import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View} from 'react-native';\nimport BusinessCard from \"./components/business-card/BusinessCard\";\nimport {createStackNavigator} from \"@react-navigation/stack\";\nimport {NavigationContainer} from \"@react-navigation/native\";\nimport {DefaultTheme} from \"@react-navigation/native\";\nimport {useFonts} from 'expo-font';\nimport create = StyleSheet.create;\nimport { Provider as PaperProvider } from \"react-native-paper\";\nimport { Provider as ReduxProvider } from \"react-redux\"\nimport {COLORS} from \"./constants/theme\";\nimport {store} from \"./redux/store\";\n\n\nexport default function App() {\n  return (\n      <PaperProvider>\n          <ReduxProvider store={store}>\n              <View style={styles.container}>\n                  <BusinessCard/>\n              </View>\n          </ReduxProvider>\n      </PaperProvider>\n\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.primary,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","module.exports = __webpack_public_path__ + \"static/media/avatar.20700481.png\";","module.exports = __webpack_public_path__ + \"static/media/Twitter.bccdd347.png\";","module.exports = __webpack_public_path__ + \"static/media/Instagram.80affaca.png\";","module.exports = __webpack_public_path__ + \"static/media/Facebook.329072c7.png\";","module.exports = __webpack_public_path__ + \"static/media/cards.05701ed9.png\";"],"sourceRoot":""}